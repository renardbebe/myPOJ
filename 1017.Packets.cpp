#include <iostream>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

int main () {
	int N, a, b, c, d, e, f, y, x;  // N用来存储需要的箱子数目，y用来存储 2*2 的空位数目
	int u[4] = {0, 5, 3, 1};
	/* 数组u 表示3*3 的产品数目分别是 4的倍数，4 的倍数+1, 4 的倍数+2, 4 的倍数+3
	   时，为3*3的产品打开的新箱子中剩余的 2*2的空位的个数 */
	while(1) {
		scanf("%d%d%d%d%d%d", &a, &b, &c, &d, &e, &f);
		if(a == 0 && b == 0 && c == 0 && d == 0 && e == 0 && f == 0)
			break;
		N = f + e + d + (c + 3) / 4;  // (c+3)/4 正好等于c除以4向上取整的结果
		y = 5 * d + u[c % 4];  // 每一个4*4的箱子装过后还可以再装5个2*2的箱子
		/* 还有3*3的箱子如果没填满6*6的箱子的话，也可以用来装2*2的箱子
		   5*5的箱子则只能装1*1的情况了 */
		if(b > y)
			N += (b - y + 8 ) / 9;  // 如果要装的2*2的箱子的数目比提供的空间要多, 那么多的部分要新开一些箱子
		x = 36 * N - 36 * f - 25 * e - 16 * d - 9 * c - 4 * b;
		if(a > x)
			N += ( a - x + 35 ) / 36;
		printf("%d\n", N);
	}
}